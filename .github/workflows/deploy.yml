name: Build and Deploy to Cloud Run
on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  SERVICE_NAME: swift-ast-explorer
  DEPLOY_REGION: us-central1
  GCR_HOSTNAME: us.gcr.io
  CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
  CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
  CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ env.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        id: build
        run: |-
          IMAGE_TAG=${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          echo "::set-output name=IMAGE_TAG::${IMAGE_TAG}"
          docker build . -t ${IMAGE_TAG}
          docker push ${IMAGE_TAG}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.6.0
        with:
          image: ${{ steps.build.outputs.IMAGE_TAG }}
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.DEPLOY_REGION }}

  purge_cache:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Purge Cache
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ env.CLOUDFLARE_ZONE_ID }}/purge_cache" \
            -H "X-Auth-Email: ${{ env.CLOUDFLARE_EMAIL }}" \
            -H "X-Auth-Key: ${{ env.CLOUDFLARE_API_KEY }}" \
            -H "Content-Type:application/json" \
            --data '{"purge_everything":true}'
